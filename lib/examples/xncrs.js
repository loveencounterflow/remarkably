// Generated by CoffeeScript 1.8.0
(function() {
  var BNP, CHR, TRM, badge, info, log, rpr;

  TRM = require('coffeenode-trm');

  rpr = TRM.rpr.bind(TRM);

  badge = 'REMARKABLY/examples/brackets';

  log = TRM.get_logger('plain', badge);

  info = TRM.get_logger('info', badge);

  BNP = require('coffeenode-bitsnpieces');

  CHR = require('coffeenode-chr');

  this.about = "$name$ recognizes non-standard, extended HTML Numerical Character References (XNCRs).";

  this._matcher = /&([^#]+)#x([0-9a-f]+);/gi;

  this.parse = function(state, silent) {
    var all, cid_hex, csg, description, match, pos, src;
    src = state.src, pos = state.pos;
    if (src[pos] !== '&') {
      return false;
    }
    this._matcher.lastIndex = pos;
    match = this._matcher.exec(src);
    if ((match == null) || match['index'] !== pos) {
      return false;
    }
    all = match[0], csg = match[1], cid_hex = match[2];
    if (!silent) {
      description = {
        type: this.name,
        csg: csg,
        cid: parseInt(cid_hex, 16),
        level: state.level
      };
      state.push(description);
    }
    state.pos += all.length;
    return true;
  };

  this.render = function(tokens, idx) {
    var chr, cid, csg, _ref;
    _ref = tokens[idx], csg = _ref.csg, cid = _ref.cid;
    chr = CHR.as_uchr(cid);
    return "<span class='csg " + csg + "' cid='" + cid + "'>" + chr + "</span>";
  };

  this.extend = function(self) {
    self.inline.ruler.before(self.inline.ruler['rules'][0]['name'], this.name, this.parse);
    self.renderer.rules[this.name] = this.render;
    return null;
  };

}).call(this);
